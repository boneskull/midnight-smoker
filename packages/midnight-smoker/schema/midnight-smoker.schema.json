{
  "type": "object",
  "properties": {
    "add": {
      "allOf": [
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
        },
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
        }
      ],
      "description": "Add an extra package to the list of packages to be installed"
    },
    "all": {
      "$ref": "#/$defs/defaultFalse",
      "default": false,
      "description": "Operate on all workspaces. The root workspace is omitted unless `includeRoot` is `true`"
    },
    "bail": {
      "$ref": "#/$defs/defaultFalse",
      "default": false,
      "description": "Fail on first script failure"
    },
    "lint": {
      "$ref": "#/$defs/defaultTrue",
      "default": true,
      "description": "If `false`, do not lint when running custom scripts"
    },
    "executor": {
      "type": "string",
      "minLength": 1,
      "description": "Component ID of Executor implementation",
      "default": "default"
    },
    "includeRoot": {
      "$ref": "#/$defs/defaultFalse",
      "default": false,
      "description": "Operate on the root workspace. Only has an effect if `all` is `true`"
    },
    "json": {
      "$ref": "#/$defs/defaultFalse",
      "default": false,
      "description": "Output JSON only"
    },
    "linger": {
      "$ref": "#/$defs/defaultFalse",
      "default": false,
      "description": "Do not delete temp directories after completion"
    },
    "loose": {
      "$ref": "#/$defs/defaultFalse",
      "default": false,
      "description": "If `true`, fail if a workspace is missing a script"
    },
    "pkgManager": {
      "$ref": "#/$defs/arrayOfNonEmptyStrings",
      "default": "npm@latest",
      "description": "Package manager(s) to use"
    },
    "plugin": {
      "allOf": [
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
        },
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
        }
      ],
      "description": "One or more plugins to load"
    },
    "reporter": {
      "allOf": [
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
        },
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
        }
      ],
      "description": "Component ID of Reporter implementation",
      "default": ["console"]
    },
    "ruleRunner": {
      "type": "string",
      "minLength": 1,
      "description": "Component ID of RuleRunner implementation",
      "default": "default"
    },
    "rules": {
      "type": "object",
      "properties": {
        "no-banned-files": {
          "allOf": [
            {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "allow": {
                      "allOf": [
                        {
                          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
                        },
                        {
                          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
                        }
                      ],
                      "description": "Allow these banned files"
                    },
                    "deny": {
                      "allOf": [
                        {
                          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
                        },
                        {
                          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
                        }
                      ],
                      "description": "Deny these additional files"
                    }
                  },
                  "additionalProperties": false,
                  "default": {
                    "allow": [],
                    "deny": []
                  }
                },
                {
                  "$ref": "#/$defs/severity",
                  "default": "error",
                  "description": "Severity of a rule. `off` disables the rule, `warn` will warn on violations, and `error` will error (non-zero exit code) on violations."
                },
                {
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 2,
                  "items": [
                    {
                      "$ref": "#/properties/rules/properties/no-banned-files/allOf/0/anyOf/1"
                    },
                    {
                      "$ref": "#/properties/rules/properties/no-banned-files/allOf/0/anyOf/0"
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "severity": {
                      "$ref": "#/properties/rules/properties/no-banned-files/allOf/0/anyOf/1"
                    },
                    "opts": {
                      "$ref": "#/properties/rules/properties/no-banned-files/allOf/0/anyOf/0"
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "description": "Rule-specific options"
            },
            {
              "$ref": "#/properties/rules/properties/no-banned-files/allOf/0/anyOf/3"
            }
          ]
        },
        "no-missing-entry-point": {
          "allOf": [
            {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": true,
                  "description": "Empty object",
                  "default": {}
                },
                {
                  "$ref": "#/$defs/severity",
                  "default": "error",
                  "description": "Severity of a rule. `off` disables the rule, `warn` will warn on violations, and `error` will error (non-zero exit code) on violations."
                },
                {
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 2,
                  "items": [
                    {
                      "$ref": "#/properties/rules/properties/no-missing-entry-point/allOf/0/anyOf/1"
                    },
                    {
                      "$ref": "#/properties/rules/properties/no-missing-entry-point/allOf/0/anyOf/0"
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "severity": {
                      "$ref": "#/properties/rules/properties/no-missing-entry-point/allOf/0/anyOf/1"
                    },
                    "opts": {
                      "$ref": "#/properties/rules/properties/no-missing-entry-point/allOf/0/anyOf/0"
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "description": "Empty object"
            },
            {
              "$ref": "#/properties/rules/properties/no-missing-entry-point/allOf/0/anyOf/3"
            }
          ]
        },
        "no-missing-exports": {
          "allOf": [
            {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "types": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Assert a \"types\" conditional export matches a file with a .d.ts extension"
                    },
                    "require": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Assert a \"require\" conditional export matches a CJS script"
                    },
                    "import": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Assert an \"import\" conditional export matches a ESM module"
                    },
                    "order": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Assert conditional export \"default\", if present, is the last export"
                    },
                    "glob": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Allow glob patterns in subpath exports"
                    }
                  },
                  "additionalProperties": false,
                  "default": {
                    "types": true,
                    "require": true,
                    "import": true,
                    "order": true,
                    "glob": true
                  }
                },
                {
                  "$ref": "#/$defs/severity",
                  "default": "error",
                  "description": "Severity of a rule. `off` disables the rule, `warn` will warn on violations, and `error` will error (non-zero exit code) on violations."
                },
                {
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 2,
                  "items": [
                    {
                      "$ref": "#/properties/rules/properties/no-missing-exports/allOf/0/anyOf/1"
                    },
                    {
                      "$ref": "#/properties/rules/properties/no-missing-exports/allOf/0/anyOf/0"
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "severity": {
                      "$ref": "#/properties/rules/properties/no-missing-exports/allOf/0/anyOf/1"
                    },
                    "opts": {
                      "$ref": "#/properties/rules/properties/no-missing-exports/allOf/0/anyOf/0"
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "description": "Rule-specific options"
            },
            {
              "$ref": "#/properties/rules/properties/no-missing-exports/allOf/0/anyOf/3"
            }
          ]
        },
        "no-missing-pkg-files": {
          "allOf": [
            {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "bin": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Check the \"bin\" field (if it exists)"
                    },
                    "browser": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Check the \"browser\" field (if it exists)"
                    },
                    "types": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Check the \"types\" field (if it exists)"
                    },
                    "unpkg": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Check the \"unpkg\" field (if it exists)"
                    },
                    "module": {
                      "$ref": "#/$defs/defaultTrue",
                      "default": true,
                      "description": "Check the \"module\" field (if it exists)"
                    },
                    "fields": {
                      "allOf": [
                        {
                          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
                        },
                        {
                          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
                        }
                      ],
                      "description": "Check files referenced by these additional top-level fields"
                    }
                  },
                  "additionalProperties": false,
                  "default": {
                    "bin": true,
                    "browser": true,
                    "types": true,
                    "unpkg": true,
                    "module": true,
                    "fields": []
                  }
                },
                {
                  "$ref": "#/$defs/severity",
                  "default": "error",
                  "description": "Severity of a rule. `off` disables the rule, `warn` will warn on violations, and `error` will error (non-zero exit code) on violations."
                },
                {
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 2,
                  "items": [
                    {
                      "$ref": "#/properties/rules/properties/no-missing-pkg-files/allOf/0/anyOf/1"
                    },
                    {
                      "$ref": "#/properties/rules/properties/no-missing-pkg-files/allOf/0/anyOf/0"
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "severity": {
                      "$ref": "#/properties/rules/properties/no-missing-pkg-files/allOf/0/anyOf/1"
                    },
                    "opts": {
                      "$ref": "#/properties/rules/properties/no-missing-pkg-files/allOf/0/anyOf/0"
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "description": "Rule-specific options"
            },
            {
              "$ref": "#/properties/rules/properties/no-missing-pkg-files/allOf/0/anyOf/3"
            }
          ]
        }
      },
      "additionalProperties": {
        "allOf": [
          {
            "anyOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true,
                "description": "Empty object",
                "default": {}
              },
              {
                "$ref": "#/$defs/severity",
                "default": "error",
                "description": "Severity of a rule. `off` disables the rule, `warn` will warn on violations, and `error` will error (non-zero exit code) on violations."
              },
              {
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": [
                  {
                    "$ref": "#/properties/rules/additionalProperties/allOf/0/anyOf/1"
                  },
                  {
                    "$ref": "#/properties/rules/additionalProperties/allOf/0/anyOf/0"
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "severity": {
                    "$ref": "#/properties/rules/additionalProperties/allOf/0/anyOf/1"
                  },
                  "opts": {
                    "$ref": "#/properties/rules/additionalProperties/allOf/0/anyOf/0"
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Empty object"
          },
          {
            "$ref": "#/properties/rules/additionalProperties/allOf/0/anyOf/3"
          }
        ]
      },
      "description": "Rule configuration for automated checks",
      "default": {
        "no-banned-files": {
          "allow": [],
          "deny": []
        },
        "no-missing-exports": {
          "types": true,
          "require": true,
          "import": true,
          "order": true,
          "glob": true
        },
        "no-missing-pkg-files": {
          "bin": true,
          "browser": true,
          "types": true,
          "unpkg": true,
          "module": true,
          "fields": []
        }
      }
    },
    "script": {
      "allOf": [
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
        },
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
        }
      ],
      "description": "Script(s) to run."
    },
    "scriptRunner": {
      "type": "string",
      "minLength": 1,
      "description": "Component ID of ScriptRunner implementation",
      "default": "default"
    },
    "verbose": {
      "$ref": "#/$defs/defaultFalse",
      "default": false,
      "description": "Verbose logging"
    },
    "workspace": {
      "allOf": [
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0"
        },
        {
          "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/1"
        }
      ],
      "description": "One or more workspaces to run scripts in"
    },
    "include-root": {
      "$ref": "#/properties/includeRoot"
    },
    "script-runner": {
      "$ref": "#/properties/scriptRunner"
    },
    "rule-runner": {
      "$ref": "#/properties/ruleRunner"
    },
    "pkg-manager": {
      "$ref": "#/properties/pkgManager"
    }
  },
  "additionalProperties": false,
  "description": "midnight-smoker options schema",
  "$defs": {
    "defaultTrue": {
      "type": "boolean",
      "default": true,
      "description": "A boolean defaulting to true"
    },
    "defaultFalse": {
      "type": "boolean",
      "default": false,
      "description": "A boolean defaulting to false"
    },
    "arrayOfNonEmptyStrings": {
      "allOf": [
        {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "description": "A non-empty string"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0/anyOf/0"
              },
              "description": "An array of non-empty strings"
            }
          ],
          "default": []
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/arrayOfNonEmptyStrings/allOf/0/anyOf/0"
          }
        }
      ],
      "description": "A non-empty string or array of non-empty strings, normalized to an array"
    },
    "severity": {
      "type": "string",
      "enum": ["error", "warn", "off"],
      "description": "Severity of a rule. `off` disables the rule, `warn` will warn on violations, and `error` will error (non-zero exit code) on violations."
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
